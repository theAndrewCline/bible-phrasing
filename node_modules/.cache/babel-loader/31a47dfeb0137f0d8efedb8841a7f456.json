{"ast":null,"code":"import _slicedToArray from \"/Users/andrew/Personal Projects/Active/bible-phrasing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrew/Personal Projects/Active/bible-phrasing/src/components/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport NavBar from './NavBar';\nimport '../css/App.css';\nimport { fetchPassage } from '../js/actions/actions';\nimport { BookList } from './BookList';\nimport { BookChapters } from './BookChapters';\nimport { Modal } from './Modal';\nimport TargetPassage from './TargetPassage';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nimport '../../node_modules/react-resizable/css/styles.css'; // const store: Store = createStore()\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      passages = _useState2[0],\n      setPassages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectingPassage = _useState4[0],\n      setSelectingPassage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      book = _useState8[0],\n      setBook = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedBook = _useState10[0],\n      setSelectedBook = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      initialized = _useState12[0],\n      setInitialized = _useState12[1];\n\n  var closeModal = function closeModal() {\n    setSelectingPassage(false);\n    setBook('');\n  };\n\n  var getPassages = function getPassages(book, chapter) {\n    fetchPassage(\"\".concat(book, \"+\").concat(chapter)).then(function (_ref) {\n      var passages = _ref.passages,\n          title = _ref.title;\n      setPassages(passages);\n      setTitle(title);\n      setSelectingPassage(false);\n      setSelectedBook('');\n    });\n  };\n\n  useEffect(function () {\n    getPassages('John', '1');\n  }, [initialized]);\n  return (// <Provider store={store}>\n    React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: function onClick() {\n        return setSelectingPassage(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Select A Passage\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, title), React.createElement(TargetPassage, {\n      passages: passages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), selectingPassage ? React.createElement(Modal, {\n      closeModal: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, selectedBook === '' ? React.createElement(BookList, {\n      selectBook: setSelectedBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(BookChapters, {\n      getPassage: getPassages,\n      bookTitle: selectedBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })) : null) // </Provider>\n\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrew/Personal Projects/Active/bible-phrasing/src/components/App.tsx"],"names":["React","useState","useEffect","NavBar","fetchPassage","BookList","BookChapters","Modal","TargetPassage","App","passages","setPassages","selectingPassage","setSelectingPassage","title","setTitle","book","setBook","selectedBook","setSelectedBook","initialized","setInitialized","closeModal","getPassages","chapter","then"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport NavBar from './NavBar'\nimport '../css/App.css'\nimport { Provider } from 'react-redux'\nimport { Store } from 'redux'\nimport { fetchPassage } from '../js/actions/actions'\nimport { BookList } from './BookList'\nimport { BookChapters } from './BookChapters'\nimport { Modal } from './Modal'\nimport TargetPassage from './TargetPassage';\n\nimport '../../node_modules/react-grid-layout/css/styles.css'\nimport '../../node_modules/react-resizable/css/styles.css'\n\n// const store: Store = createStore()\n\nfunction App () {\n  const [ passages, setPassages ]  = useState([])\n  const [ selectingPassage, setSelectingPassage ] = useState(false)\n  const [ title, setTitle ] = useState('')\n  const [ book, setBook ] = useState('')\n  const [ selectedBook, setSelectedBook ] = useState('')\n  const [ initialized, setInitialized ] = useState(true)\n\n  const closeModal = () => {\n    setSelectingPassage(false)\n    setBook('')\n  }\n\n  const getPassages = (book:string, chapter:string) => {\n    fetchPassage(`${book}+${chapter}`)\n      .then(({ passages, title }) => {\n        setPassages(passages)\n        setTitle(title)\n        setSelectingPassage(false)\n        setSelectedBook('')\n      })\n  }\n\n  useEffect(() => {\n    getPassages('John', '1')\n  }, [ initialized ])\n\n  return (\n    // <Provider store={store}>\n    <div className='App'>\n      <NavBar />\n\n      <button\n        onClick={() => setSelectingPassage(true)}>\n        Select A Passage\n      </button>\n\n      <h1>{title}</h1>\n\n      <TargetPassage passages={passages} />\n\n\n      { selectingPassage ?\n      <Modal\n        closeModal={closeModal}>\n        {selectedBook === ''\n        ? <BookList selectBook={setSelectedBook} />\n        : <BookChapters getPassage={getPassages} bookTitle={selectedBook} />}\n      </Modal> : null }\n    </div>\n    // </Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}